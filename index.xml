<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Js</title><link>https://jeyvison.github.io/</link><description>Recent content on Js</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 01 Jul 2018 19:34:39 +0000</lastBuildDate><atom:link href="https://jeyvison.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Setting Up Your Microservice With Micronaut</title><link>https://jeyvison.github.io/posts/setting-up-your-microservice-with-micronaut/</link><pubDate>Sun, 01 Jul 2018 19:34:39 +0000</pubDate><guid>https://jeyvison.github.io/posts/setting-up-your-microservice-with-micronaut/</guid><description>Micronaut is a JVM-based framework designed to help developers build building modular, easily testable microservice applications.
It has several tools that are needed to build a microservice application like:
Dependency Injection and Inversion of Control (IoC) Sensible Defaults and Auto-Configuration Configuration and Configuration Sharing Service Discovery HTTP Routing HTTP Client with client-side load-balancing At the same time, it provides:
Fast startup time Reduced memory footprint Minimal use of reflection Minimal use of proxies Easy unit testing It was designed to avoid some downsides of other frameworks used to build microservices.</description></item><item><title>Server Sent Events With Jax-RS</title><link>https://jeyvison.github.io/posts/server-sent-events-with-jaxrs/</link><pubDate>Mon, 25 Dec 2017 22:42:45 +0000</pubDate><guid>https://jeyvison.github.io/posts/server-sent-events-with-jaxrs/</guid><description>Java EE 8 has been around for some time and it brought many improvements to the Java ecosystem and it’s many APIs. In this post we will talk about something that was brought by the fresh JAX-RS 2.1 specification, the Server-Sent Events.
Server-Sent Events (or SSE) are a one-way channel meant to send one to multiple messages from the server to the client(browser or java) in a single request. It’s built over HTPP and also has the capability to broadcast messages to event listeners registered on it.</description></item><item><title>Crawling the Web With Scrapy</title><link>https://jeyvison.github.io/posts/crawling-the-web-with-scrapy/</link><pubDate>Sun, 12 Nov 2017 22:17:05 +0000</pubDate><guid>https://jeyvison.github.io/posts/crawling-the-web-with-scrapy/</guid><description>Scrapy is a web crawler tool developed in Python with a high-level and simple syntax to get data from websites.
Installation You can install it using pip:
pip install scrapy or Anaconda
conda install -c conda-forge scrapy or you can download the source.
Developing a spider In this post, we’ll get the title and the link of the articles in the first page of the BBC Website.
We will use the following script to crawl it:</description></item><item><title>Gradle Basic Tutorial</title><link>https://jeyvison.github.io/posts/gradle-basic-tutorial/</link><pubDate>Sun, 15 Jan 2017 15:40:38 +0000</pubDate><guid>https://jeyvison.github.io/posts/gradle-basic-tutorial/</guid><description>Gradle Basics Tutorial 1. Overview In this tutorial, we will cover some basics of Gradle, a polyglot build system.
2. Installation 2.1. Prerequisite In order to install Gradle, you must have a Java JDK or JRE installed on your machine. Gradle will use whatever java installation it finds in your path.
2.2. Gradle You can follow this link to download one of the Gradle distributions.
2.3. GRADLE_HOME Environment Variable For running Gradle from every path in the system, we must first configure the GRADLE_HOME environment variable.</description></item></channel></rss>